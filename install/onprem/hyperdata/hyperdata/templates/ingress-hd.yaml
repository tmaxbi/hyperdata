apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: hyperdata-hd-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "{{ .Values.proxy.bodysize }}"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "{{ .Values.proxy.timeout }}"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "{{ .Values.proxy.timeout }}"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "{{ .Values.proxy.timeout }}"    
spec:
  tls:
    - secretName: istio.hyperdata-nginx-ingress-nginx
  rules:
   -  http:
       paths:
       - path: /hyperdata{{ .Values.version.major }}/(.*)
         backend:
           serviceName: hyperdata-svc-hd
           servicePort: 8080
   -  http:
        paths:
        - path: /hyperdata(/|$)(.*)
          backend:
            serviceName: hyperdata-svc-hd
            servicePort: 8080
   -  http:
       paths:
       - path: /api/v1/hyperdata20/(.*)
         backend:
           serviceName: hyperdata-svc-hd
           servicePort: 8081
   {{ if and (eq .Values.customAddon.enabled true) ( .Values.customAddon.path) ( .Values.customAddon.externalPort) }}
   -  http:
       paths:
       - path: {{ .Values.customAddon.path }}
         backend:
           serviceName: hyperdata-external-hd
           servicePort: {{ .Values.customAddon.externalPort }}
    {{ end }}
    {{ if (eq .Values.sqlEditor.enabled true) }}
   -  http:
        paths:
          - path: /tiberowebstudio/(.*)
          backend:
            serviceName: service-tibero-sd
            servicePort: 8001
    {{ end }}