apiVersion: apps/v1
kind: Deployment
metadata:
  name: hyperdata-virtualization-deploy
spec:
  selector:
    matchLabels:
      app: hyperdata-virtualization-deploy
  replicas: 1
  template:
    metadata:
      labels:
        app: hyperdata-virtualization-deploy
    spec:
      containers:
        - name: hyperdata-virtualization-spring-con
          image: {{ .Values.image }}
          imagePullPolicy: Always
          ports:
            - containerPort: 8100
              name: server-port
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu}}
              memory: {{ .Values.resources.limits.memory}}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
          env:
            - name: LOGGING_PATH
              value: {{ .Values.pvc.mountPath }}/{{ .Values.logging.path }}

          volumeMounts:
            - name: application-yml-config
              mountPath: /home/virtualization/application.yml
              subPath: application.yml
            - name: virtualization-pvc
              mountPath: {{ .Values.pvc.mountPath }}
      volumes:
        - name: application-yml-config
          configMap:
            name: virtualization-spring-configmap
            items:
              - key: "application.yml"
                path: "application.yml"
        - name: virtualization-pvc
          persistentVolumeClaim:
            claimName: {{ .Values.pvc.name }}